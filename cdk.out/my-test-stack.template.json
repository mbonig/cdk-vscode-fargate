{
  "Resources": {
    "MyVSCodeFargateCertificateC28C16BA": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": "vscode.aws.apted.io",
        "DomainValidationOptions": [
          {
            "DomainName": "vscode.aws.apted.io",
            "HostedZoneId": "ZXCHXKBGOLSRQ"
          }
        ],
        "ValidationMethod": "DNS"
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Certificate/Resource"
      }
    },
    "MyVSCodeFargateVpcDC0B1465": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/Resource"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet1SubnetA44014B7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1/Subnet"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet1RouteTableF3C9408F": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1/RouteTable"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet1RouteTableAssociation2E5903F8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet1RouteTableF3C9408F"
        },
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet1SubnetA44014B7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet1DefaultRouteC4003449": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet1RouteTableF3C9408F"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVSCodeFargateVpcIGW9CA79303"
        }
      },
      "DependsOn": [
        "MyVSCodeFargateVpcVPCGWF44318B3"
      ],
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet1EIP18DB5775": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1/EIP"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet1NATGateway6ADBCA2A": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateVpcPublicSubnet1EIP18DB5775",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet1SubnetA44014B7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet1/NATGateway"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet2Subnet048C5DDB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet2/Subnet"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet2RouteTableE4B12492": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet2/RouteTable"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet2RouteTableAssociation2D668E7F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet2RouteTableE4B12492"
        },
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet2Subnet048C5DDB"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet2DefaultRoute0714F44B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet2RouteTableE4B12492"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVSCodeFargateVpcIGW9CA79303"
        }
      },
      "DependsOn": [
        "MyVSCodeFargateVpcVPCGWF44318B3"
      ],
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet3Subnet54273BAF": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet3/Subnet"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet3RouteTable054726D0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet3/RouteTable"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet3RouteTableAssociation2AD97704": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet3RouteTable054726D0"
        },
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet3Subnet54273BAF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet3/RouteTableAssociation"
      }
    },
    "MyVSCodeFargateVpcPublicSubnet3DefaultRoute43A09149": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet3RouteTable054726D0"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVSCodeFargateVpcIGW9CA79303"
        }
      },
      "DependsOn": [
        "MyVSCodeFargateVpcVPCGWF44318B3"
      ],
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PublicSubnet3/DefaultRoute"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet1Subnet6D0321C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet1/Subnet"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet1RouteTableCAC8C34B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet1/RouteTable"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet1RouteTableAssociation9198767D": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet1RouteTableCAC8C34B"
        },
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet1Subnet6D0321C4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet1DefaultRouteCD8AB263": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet1RouteTableCAC8C34B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet1NATGateway6ADBCA2A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet2SubnetDFEADF2A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet2/Subnet"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet2RouteTableBCB3EE60": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet2/RouteTable"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet2RouteTableAssociation07DA9BEF": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet2RouteTableBCB3EE60"
        },
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet2SubnetDFEADF2A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet2DefaultRouteCE498953": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet2RouteTableBCB3EE60"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet1NATGateway6ADBCA2A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet3Subnet8BA2EA47": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "AvailabilityZone": "us-east-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet3/Subnet"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet3RouteTableC66CA051": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet3/RouteTable"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet3RouteTableAssociation1702159B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet3RouteTableC66CA051"
        },
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet3Subnet8BA2EA47"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "MyVSCodeFargateVpcPrivateSubnet3DefaultRoute19640C6C": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet3RouteTableC66CA051"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVSCodeFargateVpcPublicSubnet1NATGateway6ADBCA2A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/PrivateSubnet3/DefaultRoute"
      }
    },
    "MyVSCodeFargateVpcIGW9CA79303": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/IGW"
      }
    },
    "MyVSCodeFargateVpcVPCGWF44318B3": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        },
        "InternetGatewayId": {
          "Ref": "MyVSCodeFargateVpcIGW9CA79303"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Vpc/VPCGW"
      }
    },
    "MyVSCodeFargateCluster0CA81BA8": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Cluster/Resource"
      }
    },
    "MyVSCodeFargateEfsFileSystemF58ED89A": {
      "Type": "AWS::EFS::FileSystem",
      "Properties": {
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/EfsFileSystem"
          }
        ],
        "LifecyclePolicies": [
          {
            "TransitionToIA": "AFTER_30_DAYS"
          }
        ],
        "PerformanceMode": "generalPurpose"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/EfsFileSystem/Resource"
      }
    },
    "MyVSCodeFargateEfsFileSystemEfsSecurityGroupFB117A68": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "my-test-stack/MyVSCodeFargate/EfsFileSystem/EfsSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "my-test-stack/MyVSCodeFargate/EfsFileSystem"
          }
        ],
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/EfsFileSystem/EfsSecurityGroup/Resource"
      }
    },
    "MyVSCodeFargateEfsFileSystemEfsSecurityGroupfrommyteststackMyVSCodeFargateServiceSecurityGroup8E7CFB76204920C95A10": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from myteststackMyVSCodeFargateServiceSecurityGroup8E7CFB76:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateEfsFileSystemEfsSecurityGroupFB117A68",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateServiceSecurityGroup632347FD",
            "GroupId"
          ]
        },
        "ToPort": 2049
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/EfsFileSystem/EfsSecurityGroup/from myteststackMyVSCodeFargateServiceSecurityGroup8E7CFB76:2049"
      }
    },
    "MyVSCodeFargateEfsFileSystemEfsMountTarget1C115DFEE": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "MyVSCodeFargateEfsFileSystemF58ED89A"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MyVSCodeFargateEfsFileSystemEfsSecurityGroupFB117A68",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet1Subnet6D0321C4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/EfsFileSystem/EfsMountTarget1"
      }
    },
    "MyVSCodeFargateEfsFileSystemEfsMountTarget27268015B": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "MyVSCodeFargateEfsFileSystemF58ED89A"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MyVSCodeFargateEfsFileSystemEfsSecurityGroupFB117A68",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet2SubnetDFEADF2A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/EfsFileSystem/EfsMountTarget2"
      }
    },
    "MyVSCodeFargateEfsFileSystemEfsMountTarget3629DA87B": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "MyVSCodeFargateEfsFileSystemF58ED89A"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MyVSCodeFargateEfsFileSystemEfsSecurityGroupFB117A68",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "MyVSCodeFargateVpcPrivateSubnet3Subnet8BA2EA47"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/EfsFileSystem/EfsMountTarget3"
      }
    },
    "MyVSCodeFargateSecret6C64F286": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {}
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Secret/Resource"
      }
    },
    "MyVSCodeFargateLogGroup67C6A39B": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/app/my-test-stack/MyVSCodeFargate",
        "RetentionInDays": 60
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/LogGroup/Resource"
      }
    },
    "MyVSCodeFargateServiceLB7AC67843": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MyVSCodeFargateServiceLBSecurityGroup8B96CF18",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "MyVSCodeFargateVpcPublicSubnet1SubnetA44014B7"
          },
          {
            "Ref": "MyVSCodeFargateVpcPublicSubnet2Subnet048C5DDB"
          },
          {
            "Ref": "MyVSCodeFargateVpcPublicSubnet3Subnet54273BAF"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "MyVSCodeFargateVpcPublicSubnet1DefaultRouteC4003449",
        "MyVSCodeFargateVpcPublicSubnet2DefaultRoute0714F44B",
        "MyVSCodeFargateVpcPublicSubnet3DefaultRoute43A09149"
      ],
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/LB/Resource"
      }
    },
    "MyVSCodeFargateServiceLBSecurityGroup8B96CF18": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB myteststackMyVSCodeFargateServiceLB0868AE80",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/LB/SecurityGroup/Resource"
      }
    },
    "MyVSCodeFargateServiceLBSecurityGrouptomyteststackMyVSCodeFargateServiceSecurityGroup8E7CFB76844326BB9EBA": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateServiceLBSecurityGroup8B96CF18",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateServiceSecurityGroup632347FD",
            "GroupId"
          ]
        },
        "FromPort": 8443,
        "ToPort": 8443
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/LB/SecurityGroup/to myteststackMyVSCodeFargateServiceSecurityGroup8E7CFB76:8443"
      }
    },
    "MyVSCodeFargateServiceLBPublicListener820FD2AD": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "MyVSCodeFargateServiceLBPublicListenerECSGroup8180DE73"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "MyVSCodeFargateServiceLB7AC67843"
        },
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "MyVSCodeFargateCertificateC28C16BA"
            }
          }
        ],
        "Port": 443,
        "Protocol": "HTTPS"
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/LB/PublicListener/Resource"
      }
    },
    "MyVSCodeFargateServiceLBPublicListenerECSGroup8180DE73": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/login",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "MyVSCodeFargateServiceLBPublicRedirectListener44AC0E9F": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "RedirectConfig": {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301"
            },
            "Type": "redirect"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "MyVSCodeFargateServiceLB7AC67843"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/LB/PublicRedirectListener/Resource"
      }
    },
    "MyVSCodeFargateServiceDNSF7EFBAE6": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "vscode.aws.apted.io.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "MyVSCodeFargateServiceLB7AC67843",
                    "DNSName"
                  ]
                }
              ]
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "MyVSCodeFargateServiceLB7AC67843",
              "CanonicalHostedZoneID"
            ]
          }
        },
        "HostedZoneId": "ZXCHXKBGOLSRQ"
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/DNS/Resource"
      }
    },
    "MyVSCodeFargateServiceTaskDefTaskRole94C75545": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/TaskDef/TaskRole/Resource"
      }
    },
    "MyVSCodeFargateServiceTaskDefBF622930": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "ghcr.io/linuxserver/code-server",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "MyVSCodeFargateLogGroup67C6A39B"
                },
                "awslogs-stream-prefix": "app",
                "awslogs-region": "us-east-1"
              }
            },
            "MountPoints": [
              {
                "ContainerPath": "/efs",
                "ReadOnly": true,
                "SourceVolume": "myHomeVolume"
              }
            ],
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 8443,
                "Protocol": "tcp"
              }
            ],
            "Secrets": [
              {
                "Name": "PASSWORD",
                "ValueFrom": {
                  "Ref": "MyVSCodeFargateSecret6C64F286"
                }
              }
            ]
          }
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "MyVSCodeFargateServiceTaskDefExecutionRoleE4DA0E0C",
            "Arn"
          ]
        },
        "Family": "myteststackMyVSCodeFargateServiceTaskDefB37D4F49",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "MyVSCodeFargateServiceTaskDefTaskRole94C75545",
            "Arn"
          ]
        },
        "Volumes": [
          {
            "Name": "myHomeVolume",
            "EfsVolumeConfiguration": {
              "FileSystemId": {
                "Ref": "MyVSCodeFargateEfsFileSystemF58ED89A"
              }
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/TaskDef/Resource"
      }
    },
    "MyVSCodeFargateServiceTaskDefExecutionRoleE4DA0E0C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/TaskDef/ExecutionRole/Resource"
      }
    },
    "MyVSCodeFargateServiceTaskDefExecutionRoleDefaultPolicyF63D4CD8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MyVSCodeFargateLogGroup67C6A39B",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "MyVSCodeFargateSecret6C64F286"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyVSCodeFargateServiceTaskDefExecutionRoleDefaultPolicyF63D4CD8",
        "Roles": [
          {
            "Ref": "MyVSCodeFargateServiceTaskDefExecutionRoleE4DA0E0C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "MyVSCodeFargateService3D48D41D": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "MyVSCodeFargateCluster0CA81BA8"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 8443,
            "TargetGroupArn": {
              "Ref": "MyVSCodeFargateServiceLBPublicListenerECSGroup8180DE73"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "MyVSCodeFargateServiceSecurityGroup632347FD",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "MyVSCodeFargateVpcPrivateSubnet1Subnet6D0321C4"
              },
              {
                "Ref": "MyVSCodeFargateVpcPrivateSubnet2SubnetDFEADF2A"
              },
              {
                "Ref": "MyVSCodeFargateVpcPrivateSubnet3Subnet8BA2EA47"
              }
            ]
          }
        },
        "PlatformVersion": "1.4.0",
        "TaskDefinition": {
          "Ref": "MyVSCodeFargateServiceTaskDefBF622930"
        }
      },
      "DependsOn": [
        "MyVSCodeFargateServiceLBPublicListenerECSGroup8180DE73",
        "MyVSCodeFargateServiceLBPublicListener820FD2AD"
      ],
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/Service/Service"
      }
    },
    "MyVSCodeFargateServiceSecurityGroup632347FD": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "my-test-stack/MyVSCodeFargate/Service/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "MyVSCodeFargateVpcDC0B1465"
        }
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/Service/SecurityGroup/Resource"
      }
    },
    "MyVSCodeFargateServiceSecurityGroupfrommyteststackMyVSCodeFargateServiceLBSecurityGroup23F5FFDB8443D344FC7F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 8443,
        "GroupId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateServiceSecurityGroup632347FD",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateServiceLBSecurityGroup8B96CF18",
            "GroupId"
          ]
        },
        "ToPort": 8443
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/Service/SecurityGroup/from myteststackMyVSCodeFargateServiceLBSecurityGroup23F5FFDB:8443"
      }
    },
    "MyVSCodeFargateServiceSecurityGroupfrommyteststackMyVSCodeFargateEfsFileSystemEfsSecurityGroupAC355BE92049C77B31B6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from myteststackMyVSCodeFargateEfsFileSystemEfsSecurityGroupAC355BE9:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateServiceSecurityGroup632347FD",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyVSCodeFargateEfsFileSystemEfsSecurityGroupFB117A68",
            "GroupId"
          ]
        },
        "ToPort": 2049
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/MyVSCodeFargate/Service/Service/SecurityGroup/from myteststackMyVSCodeFargateEfsFileSystemEfsSecurityGroupAC355BE9:2049"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAE31TwW7bMAz9lt0VtWm7w27LsrYI0G2GXfSuyIzHxpYMiUoRGP73UbIdu92wkx4fKZKPotZyfX0nrz99VW9+pcvjVaetA9kVpPRR5OBtcBrE9mB+BWoDia01nlzQFLnJ34t4vdPgCA+oFUGjjKrAyW47c/HGwuwF6BvZvbQ6Ol6yrcjCvkZdhL2BlH5GuQ0Ez2pfw8zP3MZ7q1ERWnMJjuB+l8Xjp6JHrvemziJzeGI4J94ZAsd4Chg6Ga0N8RR+N2BIFKCDQzo/Ohva1MN/iZ2pHHj/F3+f6Kjc82jq4Ll6GssIH5SrVFTlj9/hgAYnTR8Za0ihAbfgxrsFuBMOTzZCLnfgcg9YQ3HmMk30vbd+2GDomRMA9cKDdkD+8oRFskctLkbUtuKET7a6qJ9wkrZqFcWxerlp2zo+Nvf3ZFX5TdXKaCg/tAq18oS65oh9ikBTnXg1/n3bDfUW9jIOWZIZYya88A8aL20vzF64uDefb7luDvwLymHDIyqiaFSN7HI7rGA6M8tp084MqO97YWwJ8tVfndY3cv2Ff9arR1w5Hi82IPPh/AN+L1fXdgMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "my-test-stack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "MyVSCodeFargateServiceLoadBalancerDNSD6C2B8B8": {
      "Value": {
        "Fn::GetAtt": [
          "MyVSCodeFargateServiceLB7AC67843",
          "DNSName"
        ]
      }
    },
    "MyVSCodeFargateServiceServiceURL70401BBD": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "MyVSCodeFargateServiceDNSF7EFBAE6"
            }
          ]
        ]
      }
    }
  }
}